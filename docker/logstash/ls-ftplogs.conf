input {
  file {
    path => "/opt/logs/proftpd/2014/**/transfer_log"
    path => "/opt/logs/proftpd/2015/**/transfer_log"
    path => "/opt/logs/proftpd/2016/**/transfer_log"
    path => "/opt/logs/proftpd/2017/**/transfer_log"
    path => "/opt/logs/proftpd/2018/**/transfer_log"
    start_position => "beginning"
  }

  tcp {
    port => 1514
  }
}

filter {
  grok {
    match => { "message" => "%{COMMONAPACHELOG} %{PATH:fullpath}" }
    add_field => { "ip_address" => "%{clientip}" }
  }
  if "_grokparsefailure" in [tags] { drop {} }

  if "irods" not in [fullpath] { drop {} }

  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }

  mutate {
    remove_field => [ "host" ]
    rename => [ "clientip", "hostname" ]
  }

  dns {
    resolve => [ "ip_address" ]
    action => "replace"
  }
  
  geoip {
    add_tag => [ "geoip" ]
    source => "ip_address"
    target => "geoip"
  }

  geoip {
    database => "/opt/logstash/vendor/geoip/GeoIPASNum.dat"
    source => "ip_address"
    target => "geoip"
  }

  if [geoip] {
    if [geoip][city_name] and [geoip][real_region_name] and [geoip][country_name] {
      mutate {
        add_field => { "city_state_country" => "%{[geoip][city_name]}, %{[geoip][real_region_name]}, %{[geoip][country_name]}" }
      }
    } else if [geoip][real_region_name] and [geoip][country_name] {
      mutate {
        add_field => { "city_state_country" => "?, %{[geoip][real_region_name]}, %{[geoip][country_name]}" }
      }
    } else if [geoip][country_name] {
      mutate {
        add_field => { "city_state_country" => "?, ?, %{[geoip][country_name]}" }
      }
    }
  }
}

output {
  elasticsearch { host => "elasticsearch" }
  stdout { codec => rubydebug }
}
